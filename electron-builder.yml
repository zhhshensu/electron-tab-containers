asar: false # 是否加密
appId: com.electron.starter
productName: electron-starter
directories:
  output: "release/${version}"
files:
  - "dist"
  - "!**/.vscode/*"
  - "!src/*"
  - "!render/*"
  - "!vite.config.{js,ts,mjs,cjs}"
  - "!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}"
  - "!{.env,.env.*,.npmrc,pnpm-lock.yaml}"
  - "!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}"
# asarUnpack:
#   - resources/**
win:
  executableName: electron-starter
nsis:
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
mac:
  target: ["dmg", "zip", "pkg"]
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
  identity: null # 签名时使用的证书名称
dmg:
  artifactName: ${name}-${version}.${ext}
  sign: false
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
# publish:
#   provider: generic
#   url: https://example.com/auto-updates
